7. Visualize the data using Python libraries matplotlib, seaborn by plotting the graphs
for tips dataset.( Charts : Line chart, Barplot, Heatmap, Scatterplot, histogram,
boxplot, violin, timeseries chart)

---------no need to upload csv file-----------


import seaborn as sns
df = sns.load_dataset('tips')


import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt


df = sns.load_dataset('tips')


sns.set(style="whitegrid")

----------------# Line chart: average total_bill by day-----------------




plt.figure(figsize=(8, 5))
df.groupby('day')['total_bill'].mean().plot(marker='o')
plt.title('Average Total Bill by Day')
plt.xlabel('Day')
plt.ylabel('Average Total Bill')
plt.grid(True)
plt.show()


-----------------# Barplot: average tip by gender---------------


plt.figure(figsize=(6, 5))
sns.barplot(x='sex', y='tip', data=df)
plt.title('Average Tip by Gender')
plt.show()

-------------# Heatmap: correlation between numeric features-----------
plt.figure(figsize=(8, 6))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

OR
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load dataset
file_path = "heart - 6 charts .csv"  # Or use "tip.csv" if working with that
df = pd.read_csv(file_path)

# Select only numeric columns
numeric_df = df.select_dtypes(include='number')

# Create correlation heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(numeric_df.corr(), annot=True, cmap='coolwarm', fmt=".2f", square=True)
plt.title('Correlation Heatmap of Numeric Features')
plt.tight_layout()
plt.show()

------------# Scatterplot: tip vs. total_bill---------

plt.figure(figsize=(7, 5))
sns.scatterplot(x='total_bill', y='tip', hue='sex', data=df)
plt.title('Tip vs. Total Bill')
plt.show()

OR

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load the tips dataset
file_path = "tip.csv"  # Make sure the path matches your file
df = pd.read_csv(file_path)

# Create scatterplot
plt.figure(figsize=(7, 5))
sns.scatterplot(x='total_bill', y='tip', hue='sex', data=df)
plt.title('Scatterplot: Tip vs. Total Bill')
plt.xlabel('Total Bill')
plt.ylabel('Tip')
plt.tight_layout()
plt.show()


-------------# Histogram: distribution of total_bill----------

plt.figure(figsize=(6, 4))
sns.histplot(df['total_bill'], bins=20, kde=True)
plt.title('Distribution of Total Bill')
plt.show()

OR

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load the dataset
file_path = "tip.csv"
df = pd.read_csv(file_path)

# Plot histogram using distplot (deprecated in newer versions but works in older)
plt.figure(figsize=(6, 4))
sns.distplot(df['total_bill'], bins=20, kde=True, color='skyblue')
plt.title('Distribution of Total Bill')
plt.xlabel('Total Bill')
plt.ylabel('Density')
plt.tight_layout()
plt.show()


------------# Boxplot: tip by smoker---------------
plt.figure(figsize=(6, 5))
sns.boxplot(x='smoker', y='tip', data=df)
plt.title('Tip Distribution by Smoker Status')
plt.show()

---------------# Violin plot: tip by day-------------
plt.figure(figsize=(8, 5))
sns.violinplot(x='day', y='tip', data=df)
plt.title('Tip Distribution by Day')
plt.show()

----------# Time series chart: total_bill across entries (simulated as time series)---------
plt.figure(figsize=(10, 4))
plt.plot(df['total_bill'])
plt.title('Total Bill Over Entries')
plt.xlabel('Index (simulated time)')
plt.ylabel('Total Bill')
plt.show()













